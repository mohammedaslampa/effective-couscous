#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>

#include "index.h"                      //Our HTML webpage contents with javascripts


int tank0,tank1,error0,error1,t;                       //for u.s sensor reading
char M0=0,M1=0;                          //for storing motor status
const int L0=2,L1=0;               //motor pin connected to relay and scr
unsigned long previousMillis = 0;        // will store last time LED was updated
const long interval = 1000;           // interval at which to blink (milliseconds)

//SSID and Password of your WiFi router
const char* ssid = "BSNL_AP";
const char* password = "spot$toulouse";

ESP8266WebServer server(80);           //Server on port 80

//===============================================================
void handleRoot() {
 String s = MAIN_page; //Read HTML contents
 server.send(200, "text/html", s); //Send web page
}
  void states() {
server.send(200,"text/plane","{ \"t0\":"+String(tank0)+", \"m0\":"+M0+", \"t1\":"+String(tank1)+", \"m1\":"+M1+" }");
}
void setload() {
 String loadstate = "OFF";
 String t_state = server.arg("loadstate"); //Refer  xhttp.open("GET", "setLED?LEDstate="+led, true);
 Serial.println(t_state);
 if(t_state == "1")
 {
  digitalWrite(LED,LOW); //LED ON
  ledState = "ON"; //Feedback parameter
 }
 else
 {
  digitalWrite(LED,HIGH); //LED OFF
  ledState = "OFF"; //Feedback parameter  
 }
 
 
 server.send(200, "text/plane", loadstate); //Send web page
}


void setup(){
  Serial.begin(115200);
  pinMode(L0, OUTPUT);
  pinMode(L1, OUTPUT);
  WiFi.begin(ssid, password);            //Connect to your WiFi router
  Serial.println("");                   // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
        }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());        //IP address assigned to your ESP
  server.on("/", handleRoot);           //Which routine to handle at root location. This is display page
  server.on("/getstatus", states);
  server.begin();                       //Start server
  Serial.println("HTTP server started");
  }

  void loop(){
unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;
      tank0 = usread(10);
      tank1 = usread(16);    //Read the ultrasonic sensor reading for tank1
  }
  server.handleClient();          //Handle client requests
  
  if(tank0<=16){
    digitalWrite(L0,LOW);
    M0='0';
   }
  if(tank0>88){
          digitalWrite(L0,HIGH);
        M0='1';
    }
  if(tank0  <13||tank0>91){
    error0++;
    }
    //tank1
  if(tank1<=16){
    digitalWrite(L1,LOW);
    M1='0';
   }
  if(tank1>88){
          digitalWrite(L1,HIGH);
        M1='1';
    }
  if(tank1<13||tank1>91){
    error1++;
    }
  } 
  
int usread(int trig){    
  pinMode(trig, OUTPUT);//taking hc sr04 sensor reading for more refer data sheet of hc-sr04
  digitalWrite(trig, LOW);
  delayMicroseconds(5);
  digitalWrite(trig, HIGH);
  delayMicroseconds(12);
  digitalWrite(trig, LOW);
  pinMode(trig, INPUT);
  long duration = pulseIn(trig, HIGH);
  return duration / 29 / 2;      //coverting pulse length to cm
}